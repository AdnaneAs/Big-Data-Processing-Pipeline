version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  hdfs-namenode:
    image: bde2020/hadoop-namenode
    container_name: hdfs-namenode
    restart: always
    ports:
      - "9870:9870"
    environment:
      - CLUSTER_NAME=test_cluster
    volumes:
      - hdfs_namenode:/hadoop/dfs/name

  hdfs-datanode:
    image: bde2020/hadoop-datanode
    container_name: hdfs-datanode
    restart: always
    depends_on:
      - hdfs-namenode
    ports:
      - "9864:9864"
    environment:
      - CLUSTER_NAME=test_cluster
    volumes:
      - hdfs_datanode:/hadoop/dfs/data

  spark-master:
    image: bitnami/spark
    container_name: spark-master
    restart: always
    environment:
      - SPARK_MODE=master
    ports:
      - "8080:8080"
      - "7077:7077"
    depends_on:
      - hdfs-namenode

  spark-worker:
    image: bitnami/spark
    container_name: spark-worker
    restart: always
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master

  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

volumes:
  hdfs_namenode:
  hdfs_datanode:
  mongo_data:
